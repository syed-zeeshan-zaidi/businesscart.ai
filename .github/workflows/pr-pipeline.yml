name: PR Pipeline

on:
  pull_request:
    branches: [main, staging]

jobs:
  build-cdk:
    name: Build CDK Root
    runs-on: ubuntu-latest
    outputs:
      node-version: 18
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies (CDK root)
        run: npm install

      - name: Build CDK
        run: npm run build

  build-go-services:
    name: Build Go Services
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'

      - name: Build and Test Go Services
        run: |
          for service in account-service checkout-service; do
            echo "Building and testing $service"
            cd $service
            go mod tidy
            go build -v ./...
            go test -v ./...
            cd ..
          done

  build-cdk-and-services:
    name: Build CDK + Microservices & CDK Synth
    runs-on: ubuntu-latest
    needs: [build-cdk, build-go-services]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies (CDK root)
        run: npm install

      - name: Build CDK root
        run: npm run build

      - name: Install & Build JS Microservices
        run: |
          for service in product-service web-portal; do
            echo "Building $service"
            cd $service
            rm -rf node_modules dist
            npm install
            if [ -f .env.example ]; then cp .env.example .env; fi
            npm run build
            cd ..
          done

      - name: Run Tests (JS Microservices except web-portal)
        run: |
          for service in product-service; do
            echo "Running tests for $service"
            cd $service
            npm run test || exit 1
            cd ..
          done

      - name: CDK Synth
        run: npx cdk synth
